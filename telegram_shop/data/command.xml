<?xml version="1.0" encoding="utf-8"?>
<openerp>
<data>
    <record model="telegram.command" id="shop_command">
        <field name="name">/shop</field>
        <field name="description">Shows available goods</field>
        <field name="sequence" eval="100"/>
        <field name="type">normal</field>
        <field name="universal">True</field>
        <field name="group_ids" eval="[(4, ref('base.group_user'))]" />
        <field name="response_code"><![CDATA[
CATEGORY_KEY='c'
PRODUCT_KEY='p'

categ_id = None
product_id = None
if callback_data:
    categ_id = callback_data.get(CATEGORY_KEY)
    product_id = callback_data.get(PRODUCT_KEY)

if product_id:

    product = env['product.template'].browse(product_id)
    data['type'] = 'product'
    data['product'] = product
    options['photos'] = [{'data':product.image}]

else:

    keyboard = types.InlineKeyboardMarkup()
    parent = None
    if categ_id:
        domain = [('parent_id','=', categ_id)]
        category = env['product.public.category'].browse(categ_id)
        parent = category.parent_id
    else:
        domain = [('parent_id', '=', None)]

    # Up button
    up_icon = emoji.emojize(':arrow_heading_up:', use_aliases=True)
    if parent:
        keyboard.add(types.InlineKeyboardButton(
            text=_('Go Up %s %s') % (up_icon, parent.name),
            callback_data=command.encode_callback_data({
                CATEGORY_KEY: parent.id
            })
        ))
    elif categ_id:
        keyboard.add(types.InlineKeyboardButton(
            text=_('Go Up %s') % up_icon,
            callback_data=command.encode_callback_data({})
        ))

    # subcategories
    res = env['product.public.category'].search(domain)
    if res:
        data['type'] = 'categories'
    for r in res:
        keyboard.add(types.InlineKeyboardButton(
            text=r.name, 
            callback_data=command.encode_callback_data({
                CATEGORY_KEY: r.id,
            })))

    if not res:
        # products
        domain = []
        if categ_id:
            domain = [('public_categ_ids','child_of', categ_id)]
        res = env['product.template'].search(domain)
        if res:
            data['type'] = 'products'
        for r in res:
            keyboard.add(types.InlineKeyboardButton(
                text=r.name, 
                callback_data=command.encode_callback_data({
                    PRODUCT_KEY: r.id,
                })))
        if not res:
            data['type'] = 'not_found'
            keyboard = None

    if keyboard:
        options['reply_markup'] = keyboard
    
]]>
        </field>
        <field name="response_template" type="xml">
            <t>
                <t t-if="data.get('type', False)">
                    <t t-if="data['type'] == 'categories'">
                        <t>Select category:</t>
                    </t>
                    <t t-if="data['type'] == 'products'">
                        <t>Select product:</t>
                    </t>
                    <t t-if="data['type'] == 'product'">
<b><t t-esc="data['product'].name"/></b>
<em>Price: <t t-esc="data['product'].price"/></em>
                    </t>
                </t>
            </t>
        </field>
    </record>
</data>
</openerp>
